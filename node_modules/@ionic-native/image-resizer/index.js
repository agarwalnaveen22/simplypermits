var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var ImageResizerOriginal = /** @class */ (function (_super) {
    __extends(ImageResizerOriginal, _super);
    function ImageResizerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageResizerOriginal.prototype.resize = function (options) { return cordova(this, "resize", {}, arguments); };
    ImageResizerOriginal.pluginName = "ImageResizer";
    ImageResizerOriginal.plugin = "info.protonet.imageresizer";
    ImageResizerOriginal.pluginRef = "ImageResizer";
    ImageResizerOriginal.repo = "https://github.com/JoschkaSchulz/cordova-plugin-image-resizer";
    ImageResizerOriginal.platforms = ["Android", "iOS", "Windows"];
    return ImageResizerOriginal;
}(IonicNativePlugin));
var ImageResizer = new ImageResizerOriginal();
export { ImageResizer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2ltYWdlLXJlc2l6ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBaUZ0QyxnQ0FBaUI7Ozs7SUFLakQsNkJBQU0sYUFBQyxPQUE0Qjs7Ozs7O3VCQXZGckM7RUFrRmtDLGlCQUFpQjtTQUF0QyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1hZ2VSZXNpemVyT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBUaGUgVVJJIGZvciB0aGUgaW1hZ2Ugb24gdGhlIGRldmljZSB0byBnZXQgc2NhbGVkXG4gICAqL1xuICB1cmk6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZvbGRlciB0aGUgaW1hZ2Ugc2hvdWxkIGJlIHB1dFxuICAgKiAoQW5kcm9pZCBvbmx5KVxuICAgKi9cbiAgZm9sZGVyTmFtZT86IHN0cmluZztcblxuICAvKipcbiAgICogQSBjdXN0b20gbmFtZSBmb3IgdGhlIGZpbGUuIERlZmF1bHQgbmFtZSBpcyBhIHRpbWVzdGFtcC4gWW91IGhhdmUgdG8gc2V0IHRoaXMgdmFsdWUgb24gaU9TXG4gICAqL1xuICBmaWxlTmFtZT86IHN0cmluZztcblxuICAvKipcbiAgICpcbiAgICogUXVhbGl0eSBnaXZlbiBhcyBOdW1iZXIgZm9yIHRoZSBxdWFsaXR5IG9mIHRoZSBuZXcgaW1hZ2VcbiAgICogKEFuZHJvaWQgYW5kIGlPUyBvbmx5KVxuICAgKi9cbiAgcXVhbGl0eT86IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIHdpZHRoIG9mIHRoZSBuZXcgaW1hZ2VcbiAgICovXG4gIHdpZHRoOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBoZWlnaHQgb2YgdGhlIG5ldyBpbWFnZVxuICAgKi9cbiAgaGVpZ2h0OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRvIHJldHVybiBhIGJhc2U2NCBlbmNvZGVkIGltYWdlIHN0cmluZyBpbnN0ZWFkIG9mIHRoZSBwYXRoIHRvIHRoZSByZXNpemVkIGltYWdlLlxuICAgKiBpT1Mgb25seVxuICAgKi9cbiAgYmFzZTY0PzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBAbmFtZSBJbWFnZSBSZXNpemVyXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgUGx1Z2luIEZvciBJbWFnZSBSZXNpemVcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEltYWdlUmVzaXplciwgSW1hZ2VSZXNpemVyT3B0aW9ucyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaW1hZ2UtcmVzaXplcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBpbWFnZVJlc2l6ZXI6IEltYWdlUmVzaXplcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogbGV0IG9wdGlvbnMgPSB7XG4gKiAgdXJpOiB1cmksXG4gKiAgZm9sZGVyTmFtZTogJ1Byb3RvbmV0JyxcbiAqICBxdWFsaXR5OiA5MCxcbiAqICB3aWR0aDogMTI4MCxcbiAqICBoZWlnaHQ6IDEyODBcbiAqIH0gYXMgSW1hZ2VSZXNpemVyT3B0aW9ucztcbiAqXG4gKiB0aGlzLmltYWdlUmVzaXplclxuICogICAucmVzaXplKG9wdGlvbnMpXG4gKiAgIC50aGVuKChmaWxlUGF0aDogc3RyaW5nKSA9PiBjb25zb2xlLmxvZygnRmlsZVBhdGgnLCBmaWxlUGF0aCkpXG4gKiAgIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBJbWFnZVJlc2l6ZXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnSW1hZ2VSZXNpemVyJyxcbiAgcGx1Z2luOiAnaW5mby5wcm90b25ldC5pbWFnZXJlc2l6ZXInLFxuICBwbHVnaW5SZWY6ICdJbWFnZVJlc2l6ZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL0pvc2Noa2FTY2h1bHovY29yZG92YS1wbHVnaW4taW1hZ2UtcmVzaXplcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW1hZ2VSZXNpemVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVzaXplKG9wdGlvbnM6IEltYWdlUmVzaXplck9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19